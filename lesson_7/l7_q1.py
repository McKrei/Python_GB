'''
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
__init__()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде
прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в
привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
'''

class Matrix:

	def __init__(self, mat):
		self.mat = mat

	def __str__(self):
		s = ''
		for list in self.mat:
			s += str(list) +'\n'		
		return s
		# Сделал сначала через zip но через генератор проще, хотя и будут ошибки при разных матрицах
	def __add__(self, other): 
		result = [[self.mat[i][j] + other.mat[i][j]  for j in range(len(self.mat[0]))]
													 for i in range(len(self.mat))] 
		return Matrix(result)
		

m1 = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
m2 = Matrix([[9, 8, 7], [6, 5, 4], [3, 2, 1]])
print(m1, m2)
m3 = m1 + m2
print(m3)
